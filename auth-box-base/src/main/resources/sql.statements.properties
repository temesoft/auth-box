user.sql.insert=INSERT INTO user (id, create_time, username, password, name, roles_csv, enabled, organization_id, last_updated) VALUES (?,?,?,?,?,?,?,?,?)
user.sql.getById=SELECT id, create_time, username, password, name, roles_csv, enabled, organization_id, last_updated FROM user WHERE id = ?
user.sql.getByUsername=SELECT id, create_time, username, password, name, roles_csv, enabled, organization_id, last_updated FROM user WHERE username = ?
user.sql.update=UPDATE user SET username = ?, name = ?, password = ?, enabled = ?, last_updated = ? WHERE id = ?
user.sql.listByOrganizationId=SELECT id, create_time, username, password, name, roles_csv, enabled, organization_id, last_updated FROM user WHERE organization_id = ? ORDER BY create_time DESC LIMIT ? OFFSET ?
user.sql.countByOrganizationId=SELECT count(id) FROM user WHERE organization_id = ?
user.sql.deleteById=DELETE FROM user WHERE id = ?

organization.sql.insert=INSERT INTO organization (id, create_time, name, domain_prefix, address, enabled, last_updated) VALUES (?,?,?,?,?,?,?)
organization.sql.getById=SELECT id, create_time, name, domain_prefix, address, enabled, last_updated FROM organization WHERE id = ?
organization.sql.getByDomainPrefix=SELECT id, create_time, name, domain_prefix, address, enabled, last_updated FROM organization WHERE domain_prefix = ?
organization.sql.update=UPDATE organization SET name = ?, domain_prefix = ?, address = ?, enabled = ?, last_updated = ? WHERE id = ?

oauth_client.sql.insert=INSERT INTO oauth_client (id, create_time, description, secret, grant_types_csv, organization_id, enabled, redirect_urls_csv, expiration_seconds, refresh_expiration_seconds, token_type, private_key, public_key, last_updated) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
oauth_client.sql.getById=SELECT id, create_time, description, secret, grant_types_csv, organization_id, enabled, redirect_urls_csv, expiration_seconds, refresh_expiration_seconds, token_type, private_key, public_key, last_updated FROM oauth_client WHERE id = ?
oauth_client.sql.listByOrganizationId=SELECT id, create_time, description, secret, grant_types_csv, organization_id, enabled, redirect_urls_csv, expiration_seconds, refresh_expiration_seconds, token_type, private_key, public_key, last_updated FROM oauth_client WHERE organization_id = ? ORDER BY create_time DESC LIMIT ? OFFSET ? 
oauth_client.sql.updateById=UPDATE oauth_client SET description = ?, grant_types_csv = ?, enabled = ?, redirect_urls_csv = ?, expiration_seconds = ?, refresh_expiration_seconds = ?, token_type = ?, private_key = ?, public_key = ?, last_updated = ? WHERE id = ?
oauth_client.sql.deleteById=DELETE FROM oauth_client WHERE id = ?
oauth_client.sql.countByOrganizationId=SELECT count(id) FROM oauth_client WHERE organization_id = ?

oauth_scope.sql.insert=INSERT INTO oauth_scope (id, create_time, description, scope, organization_id) VALUES (?,?,?,?,?)
oauth_scope.sql.getById=SELECT id, create_time, description, scope, organization_id FROM oauth_scope WHERE id = ?
oauth_scope.sql.listByIds=SELECT id, create_time, description, scope, organization_id FROM oauth_scope WHERE id IN (%s) ORDER BY scope ASC
oauth_scope.sql.listByOrganizationId=SELECT id, create_time, description, scope, organization_id FROM oauth_scope WHERE organization_id = ? ORDER BY scope ASC LIMIT ? OFFSET ?
oauth_scope.sql.countByOrganizationId=SELECT count(id) FROM oauth_scope WHERE organization_id = ?
oauth_scope.sql.countByOrganizationIdAndScope=SELECT count(id) FROM oauth_scope WHERE organization_id = ? AND scope = ?
oauth_scope.sql.deleteById=DELETE FROM oauth_scope WHERE id = ?
oauth_scope.sql.updateById=UPDATE oauth_scope SET scope = ?, description = ? WHERE id = ?
oauth_scope.sql.listByClientId=SELECT oauth_scope.id, oauth_scope.create_time, oauth_scope.description, oauth_scope.scope, oauth_scope.organization_id \
  FROM oauth_scope, oauth_client_scope \
  WHERE oauth_client_scope.scope_id = oauth_scope.id \
  AND oauth_client_scope.client_id = ?

oauth_client_scope.sql.insert=INSERT INTO oauth_client_scope (id, create_time, client_id, scope_id) VALUES (?,?,?,?)
oauth_client_scope.sql.getById=SELECT id, create_time, client_id, scope_id WHERE id = ?
oauth_client_scope.sql.listByClientId=SELECT id, create_time, client_id, scope_id FROM oauth_client_scope WHERE client_id = ? ORDER BY create_time DESC
oauth_client_scope.sql.deleteById=DELETE FROM oauth_client_scope WHERE id = ?
oauth_client_scope.sql.deleteByScopeId=DELETE FROM oauth_client_scope WHERE scope_id = ?
oauth_client_scope.sql.deleteByClientIdAndScopeId=DELETE FROM oauth_client_scope WHERE client_id = ? AND scope_id = ?
oauth_client_scope.sql.countClientsByScopeIds=SELECT count(id) FROM oauth_client_scope WHERE scope_id IN (%s)

oauth_token.sql.insert=INSERT INTO oauth_token (id, create_time, hash, organization_id, client_id, expiration, scopes_csv, oauth_user_id, token_type, ip, user_agent, request_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)
oauth_token.sql.getById=SELECT id, create_time, hash, organization_id, client_id, expiration, scopes_csv, oauth_user_id, token_type, ip, user_agent, request_id, linked_token_id FROM oauth_token WHERE id = ?
oauth_token.sql.getByHash=SELECT id, create_time, hash, organization_id, client_id, expiration, scopes_csv, oauth_user_id, token_type, ip, user_agent, request_id, linked_token_id FROM oauth_token WHERE hash = ?
oauth_token.sql.deleteById=DELETE FROM oauth_token WHERE id = ?
oauth_token.sql.listByClientId=SELECT id, create_time, hash, organization_id, client_id, expiration, scopes_csv, oauth_user_id, token_type, ip, user_agent, request_id, linked_token_id FROM oauth_token WHERE client_id = ? ORDER BY create_time DESC LIMIT ? OFFSET ?
oauth_token.sql.listByUserId=SELECT id, create_time, hash, organization_id, client_id, expiration, scopes_csv, oauth_user_id, token_type, ip, user_agent, request_id, linked_token_id FROM oauth_token WHERE oauth_user_id = ? ORDER BY create_time DESC LIMIT ? OFFSET ?
oauth_token.sql.listByOrganizationId=SELECT id, create_time, hash, organization_id, client_id, expiration, scopes_csv, oauth_user_id, token_type, ip, user_agent, request_id, linked_token_id FROM oauth_token WHERE organization_id = ? ORDER BY create_time DESC LIMIT ? OFFSET ?
oauth_token.sql.countByClientId=SELECT count(id) FROM oauth_token WHERE client_id = ?
oauth_token.sql.countByUserId=SELECT count(id) FROM oauth_token WHERE oauth_user_id = ?
oauth_token.sql.countByOrganizationId=SELECT count(id) FROM oauth_token WHERE organization_id = ?
oauth_token.sql.updateLinkedTokenId=UPDATE oauth_token SET linked_token_id = ? WHERE id = ?

oauth_user.sql.insert=INSERT INTO oauth_user (id, create_time, username, password, enabled, organization_id, metadata, using_2fa, secret, last_updated) VALUES (?,?,?,?,?,?,?,?,?,?)
oauth_user.sql.getById=SELECT id, create_time, username, password, enabled, organization_id, metadata, using_2fa, secret, last_updated FROM oauth_user WHERE id = ?
oauth_user.sql.getByUsernameAndOrganizationId=SELECT id, create_time, username, password, enabled, organization_id, metadata, using_2fa, secret, last_updated FROM oauth_user WHERE username = ? AND organization_id = ?
oauth_user.sql.listByOrganizationId=SELECT id, create_time, username, password, enabled, organization_id, metadata, using_2fa, secret, last_updated FROM oauth_user WHERE organization_id = ? ORDER BY username ASC LIMIT ? OFFSET ?
oauth_user.sql.deleteById=DELETE FROM oauth_user WHERE id = ?
oauth_user.sql.updateById=UPDATE oauth_user SET username = ?, password = ?, enabled = ?, metadata = ?, using_2fa = ?, last_updated = ? WHERE id = ?
oauth_user.sql.countByOrganizationId=SELECT count(id) FROM oauth_user WHERE organization_id = ?

access_log.sql.insert=INSERT INTO access_log (id, create_time, organization_id, oauth_token_id, client_id, request_id, source, duration_ms, message, error, status_code, ip, user_agent) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
access_log.sql.getById=SELECT id, create_time, organization_id, oauth_token_id, client_id, request_id, source, duration_ms, message, error, status_code, ip, user_agent FROM access_log WHERE id = ?
access_log.sql.listBy=SELECT id, create_time, organization_id, oauth_token_id, client_id, request_id, source, duration_ms, message, error, status_code, ip, user_agent FROM access_log %s ORDER BY create_time ASC, duration_ms ASC LIMIT ? OFFSET ?
access_log.sql.countBy=SELECT count(id) FROM access_log %s ORDER BY create_time ASC, duration_ms ASC LIMIT ? OFFSET ?
